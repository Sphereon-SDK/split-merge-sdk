/*
 * Split Merger
 * The Split and Merge API allows you to split and merge files. For now you always have to define the filetype for the split or merge result. Supported types are Tiff, PDF or MS word files. In the future new types as well as type inferring will be implemented. Please note that this API will change in the way the merge or split is initiated from v0.1 to v0.2 which is scheduled later in 2017.
 *
 * OpenAPI spec version: 0.1
 * Contact: dev@sphereon.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package com.sphereon.sdk.splitmerge.api;

import com.sphereon.sdk.splitmerge.handler.ApiException;
import com.sphereon.sdk.splitmerge.model.JobSettings;
import com.sphereon.sdk.splitmerge.model.Job;
import com.sphereon.sdk.splitmerge.model.ErrorResponse;
import com.sphereon.sdk.splitmerge.model.MergeSettings;
import com.sphereon.sdk.splitmerge.model.SplitSettings;
import java.io.File;
import org.junit.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for AllApi
 */
public class AllApiTest {

    private final AllApi api = new AllApi();

    
    /**
     * Create a new job
     *
     * Create a new job for a splitting or merging operation
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createJobTest() throws ApiException {
        JobSettings jobSettings = null;
        // Job response = api.createJob(jobSettings);

        // TODO: test validations
    }
    
    /**
     * Delete a job manually
     *
     * Delete a job manually with all its stored objects
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteJobTest() throws ApiException {
        String jobid = null;
        // Job response = api.deleteJob(jobid);

        // TODO: test validations
    }
    
    /**
     * Get a job
     *
     * Get a job
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getJobTest() throws ApiException {
        String jobid = null;
        // Job response = api.getJob(jobid);

        // TODO: test validations
    }
    
    /**
     * Get the current result stream
     *
     * Get the result as binary stream/file.  Our API generation does not allow changing the media type based on the Accepted header unfortunately.&lt;br/&gt;This means we use a seperate path postfix with the value &#39;/stream&#39;.  This API only returns the result when the response status code is zero! In other cases nothing is returned or the Job JSON when it is still being executed
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getStreamTest() throws ApiException {
        String jobid = null;
        // byte[] response = api.getStream(jobid);

        // TODO: test validations
    }
    
    /**
     * Start merging of a job
     *
     * Start merging of a job
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void submitMergeJobTest() throws ApiException {
        String jobid = null;
        MergeSettings settings = null;
        // Job response = api.submitMergeJob(jobid, settings);

        // TODO: test validations
    }
    
    /**
     * Start splitting of a job
     *
     * Start splitting of a job
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void submitSplitJobTest() throws ApiException {
        String jobid = null;
        SplitSettings settings = null;
        // Job response = api.submitSplitJob(jobid, settings);

        // TODO: test validations
    }
    
    /**
     * Upload a file for a job
     *
     * Upload a file for a split or merge job. Processing will not be started yet.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void uploadFileTest() throws ApiException {
        String jobid = null;
        File stream = null;
        // Job response = api.uploadFile(jobid, stream);

        // TODO: test validations
    }
    
}
