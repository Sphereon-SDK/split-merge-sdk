/*
 * Split Merger
 * The Split and Merge API allows you to split and merge files. For now you always have to define the filetype for the split or merge result. Supported types are Tiff, PDF or MS word files. In the future new types as well as type inferring will be implemented. Please note that this API will change in the way the merge or split is initiated from v0.1 to v0.2 which is scheduled later in 2017.
 *
 * OpenAPI spec version: 0.1
 * Contact: dev@sphereon.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package com.sphereon.sdk.splitmerge.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.sphereon.sdk.splitmerge.model.ActionSettings;
import com.sphereon.sdk.splitmerge.model.FileEntry;
import com.sphereon.sdk.splitmerge.model.JobSettings;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.List;

/**
 * Job
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2017-09-12T12:46:53.940+02:00")
public class Job {
  @JsonProperty("completionTime")
  private OffsetDateTime completionTime = null;

  @JsonProperty("jobId")
  private String jobId = null;

  @JsonProperty("creationTime")
  private OffsetDateTime creationTime = null;

  @JsonProperty("inputs")
  private List<FileEntry> inputs = new ArrayList<FileEntry>();

  @JsonProperty("actionSettings")
  private ActionSettings actionSettings = null;

  @JsonProperty("jobSettings")
  private JobSettings jobSettings = null;

  @JsonProperty("updateTime")
  private OffsetDateTime updateTime = null;

  /**
   * The status of the job
   */
  public enum StateEnum {
    INPUTS_UPLOADED("INPUTS_UPLOADED"),
    
    PROCESSING("PROCESSING"),
    
    DONE("DONE"),
    
    ERROR("ERROR"),
    
    DELETED("DELETED");

    private String value;

    StateEnum(String value) {
      this.value = value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static StateEnum fromValue(String text) {
      for (StateEnum b : StateEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("state")
  private StateEnum state = null;

  @JsonProperty("queueTime")
  private OffsetDateTime queueTime = null;

   /**
   * The completion date/time of this job in ISO 8601 format
   * @return completionTime
  **/
  @ApiModelProperty(example = "null", value = "The completion date/time of this job in ISO 8601 format")
  public OffsetDateTime getCompletionTime() {
    return completionTime;
  }

  public Job jobId(String jobId) {
    this.jobId = jobId;
    return this;
  }

   /**
   * Get jobId
   * @return jobId
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getJobId() {
    return jobId;
  }

  public void setJobId(String jobId) {
    this.jobId = jobId;
  }

   /**
   * The creation date/time of this job in ISO 8601 format
   * @return creationTime
  **/
  @ApiModelProperty(example = "null", value = "The creation date/time of this job in ISO 8601 format")
  public OffsetDateTime getCreationTime() {
    return creationTime;
  }

  public Job inputs(List<FileEntry> inputs) {
    this.inputs = inputs;
    return this;
  }

  public Job addInputsItem(FileEntry inputsItem) {
    this.inputs.add(inputsItem);
    return this;
  }

   /**
   * The input files
   * @return inputs
  **/
  @ApiModelProperty(example = "null", value = "The input files")
  public List<FileEntry> getInputs() {
    return inputs;
  }

  public void setInputs(List<FileEntry> inputs) {
    this.inputs = inputs;
  }

  public Job actionSettings(ActionSettings actionSettings) {
    this.actionSettings = actionSettings;
    return this;
  }

   /**
   * Get actionSettings
   * @return actionSettings
  **/
  @ApiModelProperty(example = "null", required = true, value = "")
  public ActionSettings getActionSettings() {
    return actionSettings;
  }

  public void setActionSettings(ActionSettings actionSettings) {
    this.actionSettings = actionSettings;
  }

  public Job jobSettings(JobSettings jobSettings) {
    this.jobSettings = jobSettings;
    return this;
  }

   /**
   * Get jobSettings
   * @return jobSettings
  **/
  @ApiModelProperty(example = "null", required = true, value = "")
  public JobSettings getJobSettings() {
    return jobSettings;
  }

  public void setJobSettings(JobSettings jobSettings) {
    this.jobSettings = jobSettings;
  }

   /**
   * The last update date/time of this job in ISO 8601 format
   * @return updateTime
  **/
  @ApiModelProperty(example = "null", value = "The last update date/time of this job in ISO 8601 format")
  public OffsetDateTime getUpdateTime() {
    return updateTime;
  }

   /**
   * The status of the job
   * @return state
  **/
  @ApiModelProperty(example = "null", required = true, value = "The status of the job")
  public StateEnum getState() {
    return state;
  }

   /**
   * The queue date/time of this job in ISO 8601 format
   * @return queueTime
  **/
  @ApiModelProperty(example = "null", value = "The queue date/time of this job in ISO 8601 format")
  public OffsetDateTime getQueueTime() {
    return queueTime;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Job job = (Job) o;
    return Objects.equals(this.completionTime, job.completionTime) &&
        Objects.equals(this.jobId, job.jobId) &&
        Objects.equals(this.creationTime, job.creationTime) &&
        Objects.equals(this.inputs, job.inputs) &&
        Objects.equals(this.actionSettings, job.actionSettings) &&
        Objects.equals(this.jobSettings, job.jobSettings) &&
        Objects.equals(this.updateTime, job.updateTime) &&
        Objects.equals(this.state, job.state) &&
        Objects.equals(this.queueTime, job.queueTime);
  }

  @Override
  public int hashCode() {
    return Objects.hash(completionTime, jobId, creationTime, inputs, actionSettings, jobSettings, updateTime, state, queueTime);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Job {\n");
    
    sb.append("    completionTime: ").append(toIndentedString(completionTime)).append("\n");
    sb.append("    jobId: ").append(toIndentedString(jobId)).append("\n");
    sb.append("    creationTime: ").append(toIndentedString(creationTime)).append("\n");
    sb.append("    inputs: ").append(toIndentedString(inputs)).append("\n");
    sb.append("    actionSettings: ").append(toIndentedString(actionSettings)).append("\n");
    sb.append("    jobSettings: ").append(toIndentedString(jobSettings)).append("\n");
    sb.append("    updateTime: ").append(toIndentedString(updateTime)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    queueTime: ").append(toIndentedString(queueTime)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

